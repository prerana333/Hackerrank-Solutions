"""Problem 1 : Swap Case You are given a string and your task is to swap cases. 
In other words, convert all lowercase letters to uppercase letters and vice versa."""

#code: 

import string
def swap_case(s):
    lower = string.ascii_lowercase
    upper = string.ascii_uppercase
    T=[]
    for i in range(len(s)):
        if s[i] in lower:
            T.append(s[i].upper())
        elif s[i] in upper:
            T.append(s[i].lower())
        else:
            T.append(s[i])
    result=''.join(T)
    return result
    
--------------------------------------------------------------------------------------------------------------------------------

"""Problem 2 : You are given a string. Split the string on a " " (space) delimiter and join using a - hyphen. """

#code:

def split_and_join(line):
    line=line.split(" ")
    result="-".join(line)
    return result
    
------------------------------------------------------------------------------------------------------------------------------

"""Problem 3: You are given the firstname and lastname of a person on two different lines. 
Your task is to read them and print the following:
Hello firstname lastname! You just delved into python."""

#code:

def print_full_name(a, b):
    print("Hello",a,b+"!","You just delved into python.",sep=" ")
    
---------------------------------------------------------------------------------------------------------------------------------

"""Problem 4 : Mutations """

#code:

def mutate_string(string, position, character):
    return string[:position] + character + string[position+1:]
    
-------------------------------------------------------------------------------------------------------------------------------

"""Problem 5: In this challenge, the user enters a string and a substring. 
You have to print the number of times that the substring occurs in the given
string. String traversal will take place from left to right, not from right to left."""

#code:

def count_substring(string, sub_string):
    count=0
    for i in range(len(string)-len(sub_string)+1):
        if string[i:i+len(sub_string)]==sub_string:
            count += 1
    return count

--------------------------------------------------------------------------------------------------------------------------------
"""Problem 6: String Validators """

#code:

S = input()

print(any(c.isalnum() for c in S))
print(any(c.isalpha() for c in S))
print(any(c.isdigit() for c in S))
print(any(c.islower() for c in S))
print(any(c.isupper() for c in S))
-------------------------------------------------------------------------------------------------------------------------------
"""Problem 7: You are given a partial code that is used for generating the HackerRank Logo of variable thickness.
Your task is to replace the blank (______) with rjust, ljust or center."""

#code:

def main():
    # Replace all ______ with rjust, ljust or center. 

    thickness = int(input())  # This must be an odd number
    c = 'H'
    
    # Top Cone
    for i in range(thickness):
        print((c * i).rjust(thickness - 1) + c + (c * i).ljust(thickness - 1))
    
    # Top Pillars
    for i in range(thickness + 1):
        print((c * thickness).center(thickness * 2) + (c * thickness).center(thickness * 6))
    
    # Middle Belt
    for i in range((thickness + 1) // 2):
        print((c * thickness * 5).center(thickness * 6))    
    
    # Bottom Pillars
    for i in range(thickness + 1):
        print((c * thickness).center(thickness * 2) + (c * thickness).center(thickness * 6))    
    
    # Bottom Cone
    for i in range(thickness):
        print(((c * (thickness - i - 1)).rjust(thickness) + c + (c * (thickness - i - 1)).ljust(thickness)).rjust(thickness * 6))  

if __name__ == '__main__':
    main()
    
 --------------------------------------------------------------------------------------------------------------------------------------
 
 """Problem 8: You are given a string s and width w.
Your task is to wrap the string into a paragraph of width ."""

#code:

import textwrap
def wrap(string, max_width):
    return textwrap.fill(string, max_width)
    
 ------------------------------------------------------------------------------------------------------------------------------
 
 """Problem 9: Design a Doormat """
  Size: 7 x 21 
    ---------.|.---------
    ------.|..|..|.------
    ---.|..|..|..|..|.---
    -------WELCOME-------
    ---.|..|..|..|..|.---
    ------.|..|..|.------
    ---------.|.---------
 
 #code:
 
 N, M = map(int,input().split()) # More than 6 lines of code will result in 0 score. Blank lines are not counted.
for i in range(0,N//2): 
    print(('.|.'*i).rjust((M-2)//2,'-')+'.|.'+('.|.'*i).ljust((M-2)//2,'-'))
print('WELCOME'.center(M,'-'))
for i in reversed(range(0,N//2)): 
    print(('.|.'*i).rjust((M-2)//2,'-')+'.|.'+('.|.'*i).ljust((M-2)//2,'-'))
    
-------------------------------------------------------------------------------------------------------------------------------
"""Problem 10: String Formatting
Given an integer,n , print the following values for each integer 1 from n to :

Decimal
Octal
Hexadecimal (capitalized)
Binary
The four values must be printed on a single line in the order specified above for each i  from 1 to n . 
Each value should be space-padded to match the width of the binary value of n."""

#code

def print_formatted(number):
    w=len(bin(number)[2:])
    for i in range(1,number+1):
        print(str(i).rjust(w,' '),str(oct(i)[2:]).rjust(w,' '),str(hex(i)[2:].upper()).rjust(w,' '),str(bin(i)[2:]).rjust(w,' '),sep=' ')
--------------------------------------------------------------------------------------------------------------------------------
"""Problem 11: 
